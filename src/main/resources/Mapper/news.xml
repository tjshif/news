<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.school.DAO.INewsDao" >
    <sql id="Column_List">
	  subject,
	  imagePaths,
	  newsType,
      newsSubType,
	  postDate,
	  locationCode,
	  isHot,
	  createAt,
	  createBy,
      publisherId,
      isValid,
      hasDetail,
      source
    </sql>

    <insert id="insert" parameterType="com.school.Entity.NewsDTO">
        insert into News (ID, <include refid="Column_List"/>) values
        (
        #{ID},
        #{subject},
        #{imagePaths},
        #{newsType},
        #{newsSubType},
        #{postDate},
        #{locationCode},
        #{isHot},
        #{createAt},
        #{createBy},
        #{publisherId},
        #{isValid},
        #{hasDetail},
        #{source}
        )
        ON DUPLICATE KEY UPDATE subject = #{subject}, updateAt=now(), updateBy=#{updateBy};
    </insert>

    <select id="selectNewsByCreateAt" resultType="com.school.Entity.NewsDTO" >
        SELECT ID, <include refid="Column_List"/>
        FROM News where CreateAt between date(#{createDay}) and date_add(date(#{createDay}), interval 1 day);
    </select>

    <select id="selectNewsByCreateAtFromID" resultType="com.school.Entity.NewsDTO" >
        SELECT ID, <include refid="Column_List"/>
        FROM News where ID >= #{fromID} and CreateAt between date(#{createDay}) and date_add(date(#{createDay}), interval 1 day);
    </select>

    <select id="selectNewsById" resultType="com.school.Entity.NewsDTO">
        SELECT ID, <include refid="Column_List"/>
        FROM News where ID = #{ID}
    </select>

    <select id="selectNewsGreaterThanId" resultType="com.school.Entity.NewsDTO" >
        SELECT ID, <include refid="Column_List"/>
        FROM News
        WHERE NewsType = #{newsType}
            <if test="newsSubType != null">
               and newsSubType = #{newsSubType}
            </if>
            <if test="locationCode != null and locationCode != 0">
                and locationCode = #{locationCode}
            </if>
            <if test="ID != null">
                and ID &gt; #{ID}
            </if>
             AND isValid = '1' order by ID Limit 0, #{count}
    </select>

    <select id="selectNewsLessThanId" resultType="com.school.Entity.NewsDTO" >
        SELECT ID, <include refid="Column_List"/>
        FROM News
        WHERE NewsType = #{newsType}
        <if test="newsSubType != null">
            and newsSubType = #{newsSubType}
        </if>
        <if test="locationCode != null and locationCode != 0">
            and locationCode = #{locationCode}
        </if>
        <if test="ID != null">
            and ID &lt; #{ID}
        </if>
        AND isValid = '1'  order by ID desc Limit 0, #{count}
    </select>

    <select id="selectNewsByPage" resultType="com.school.Entity.NewsDTO" >
        SELECT ID, <include refid="Column_List"/>
        FROM News
        WHERE NewsType = #{newsType}
        <if test="newsSubType != null">
            and newsSubType = #{newsSubType}
        </if>
        <if test="locationCode != null and locationCode != 0">
            and locationCode = #{locationCode}
        </if>
        AND isValid = '1'
        order by ID desc Limit #{offset}, #{pageSize}
    </select>

    <update id="updateNewsStatus">
        update News set isValid = #{isValid} where ID = #{ID}
    </update>

    <select id="getCount" resultType="int" >
        SELECT count(1) FROM News
        WHERE NewsType = #{newsType}
        <if test="newsSubType != null">
            and newsSubType = #{newsSubType}
        </if>
        <if test="locationCode != null and locationCode != 0">
            and locationCode = #{locationCode}
        </if>
        AND isValid = '1';
    </select>

    <update id="update" parameterType="com.school.Gson.NewsGson">
        UPDATE News set UpdateAt=now()
        <if test="subject != null">
            , subject = #{subject}
        </if>
        <if test="newsType != null">
            , newsType = #{newsType}
        </if>
        <if test="newsSubType != null">
            , newsSubType = #{newsSubType}
        </if>
        <if test="locationCode != null">
            , locationCode = #{locationCode}
        </if>
        <if test="updateBy != null">
            , updateBy = #{updateBy}
        </if>
        where ID = #{ID};
    </update>
</mapper>